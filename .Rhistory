install.packages("KernSmooth")
library(KernSmooth)
install.packages("ggplot2")
library(ggplot2)
library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rpart", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("swirl")
library("swirl")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
x <- list(aardvark=1:5)
x
x$a
x[["a"]]
x[["a", exact=F]]
x <- c(1,2,NA,4, NA, 6)
bad  <- is.na(x)
x(!bad)
x[!bad]
x <- c(1,2,NA,4,NA,6)
y <- c("a","b",)
y <- c("a","b",NA, "d", NA, "f")
good <- complete.cases(x,y)
x[good]
y[good]
y <- c("a","b",NA, "d", NA, "f", NA)
y[good]
good <- complete.cases(x,y)
x <- c(1, NA,2,NA,4,NA,6)
good <- complete.cases(x,y)
x[good]
x <- 1:4
y <- 6:9
x+y
x<2
y=8
y
y=6:9
y==8
x<- matrix(1:4,2,2)
x
y <- matrix(rep(10,4),2,2)
y
x*y
x %*% y
help %*%
exit
x<-4
class(x)
x <- c(4,TRUE)
class(x)
x <- c(1,3,5)
y <- (3,2,10)
y <- c(3,2,10)
rbind(x,y)
class(x,y)
x <- list(2,"a","b",TRUE)
x[[2]]
class(x[[2]])
x <-1:4
y <-2
x+y
class(y)
x[x<=5] <- 0
x
x <- c(3,5,1,10,12,6)
x
x[x<=5] <- 0
x
getwd
bye
clear()
x <- matrix(1:200,20,10)
x
apply (x,2,mean)
apply (x,2,median)
x <- matrix(1:210,21,10)
x
apply (x,2,mean)
apply (x,1,mean)
apply (x,1,median)
apply (x,1,sum)
apply (x,2,sum)
x <- 1:10
x
apply(x,1,mean)
dim(x)
x <- matrix(1:210,21,10)
dim(x)
x <- matrix(1:1000,10,10,10)
x
x[1,1,1]
x <- array(1:1000,10,10,10)
x <- array(1:1000,c(10,10,10)
x
x <- array(1:1000,c(10,10,10))
x
x[1,1,1]
x[2,2,10]
x <- array(1:10000,c(10,10,10,10))
x
x <- array(1:10000,c(10,10,10,10))
x <- 1:10
x
dim(x)
x <- matrix(1:100, 10,10)
x
x <- 1:10
x
x <- array(1:100,c(10,10))
x
x <- array(1:1000,c(10,10,10))
x
rowMeans(x,1)
noise <- function(n,mean,sd) {
rnorm (n,mean,sd)
}
noise (1,1,2)
noise (1,1,2)
noise (1,1,2)
noise (1,1,2)
noise (1,1,1)
noise (1,1,1)
noise (1,1,1)
noise (1,1,1)
noise (1,1,2)
noise (3,1,2)
noise (3,1,2)
noise (3,1,2)
noise (3,1,2)
noise (1:3,1:3,2)
mapply(noise, 1:5, 1:5, 2)
x <- mapply(noise, 1:5,1:5, 2)
x
x$1
x[[1]]
x[[2]]
x[[3]]
str(tapply)
?factor
str(split)
clear()
ls
ls()
rm noise
rm(noise)
rm(x)
ls
ls()
sunspot.year
str(sunspot.year)
summary(sunspot.year)
x <- matrix(4,4)
x
?matrix
x<-matrix(nrow=4, ncol = 4)
x
x<-1:16
x
x<-matrix(1:16,nrow=4, ncol = 4)
x
solve(x)
?solve
solve(x) %*%  x
> c = rbind(c(1, -1/4), c(-1/4, 1))
> class(c)
[1] "matrix"
> solve(c)
[,1]      [,2]
[1,] 1.0666667 0.2666667
[2,] 0.2666667 1.0666667
> solve(c)%*%c
[,1] [,2]
[1,]    1    0
[2,]    0    1
c <- rbind(c(1,-1/4),c(-1/4,1))
class(c)
solve(c)
c
solve(c) * c
solve(c) %*% c
c <- matrix(c(2,2,2,2),2,2)
c
d <- matrix(1:4,2,2)
d
c*d
c %*% d
a <- matrix(1:4,2,2)
b <- matrix(1:3,1,3)
b
b <- matrix(1:3,3,1)
b
a
b
a %* b
a %*% b
b <- matrix(1:4,4,1)
a
b
a %*% b
b <- matrix(1:2,2,1)
a %*% b
a
b
a <- matrix(4:7,2,2)
b <- matrix(10:11,2,1)
a
b
a %*% b
b <- matrix(1:2,2,1)
b
b <- matrix(1:2,1,2)
b
a <- matrix(1:9,3,3)
b
a
a %*% b
TWObyTWO <- matrix(1:4,2,2)
TWObyTWO
2colBY4row <- matrix(1:8,2,4)
TwoColByFourRow <- matrix(1:8,2,4)
TwoColByFourRow
FourRowByTwoCol <- matrix(1:8,2,4)
TwoRowByTenCol <- matrix(1:20,2,10)
TwoRowByTenCol
TwoRowByFourCol <- matrix(1:8,2,4)
TwoRowByFourCol
FourRowByTenCol <- matrix(1:40,4,10)
FourRowByTenCol
rm(FourRowByTwoCol)
rm(TwoColByFourRow)
rm(TwoRowByTenCol)
rm(TWObyTWO)
TwoRowByFourCol * FourRowByTenCol
TwoRowByFourCol %*% FourRowByTenCol
a<-matrix(1:2,1,2)
a
b<-matrix(1:6,2,3)
b
a%*%b
setwd("~/Dropbox/Coursera/GitRepos/ProgrammingAssignment2")
source("cachematrix.R")
cachematrix
cachematrix()
makeCacheMatrix
e <- 1/4
e
solve(e)
e<-1
solve(e)
class(e)
mode(e)
str(e)
Se <- solve(e)
Se
type(Se)
class(Se)
f <- c(1/2,1/3,1/4,1/5)
f
solve(f)
f <- matrix(c(1/2,1/3,1/4,1/5),2,2)
solve(f)
?solve
a <- matrix(c(3,4,8,-2)2,2)
a <- matrix(c(3,4,8,-2),2,2)
a
b<-matrix(c(2,18),2,1)
b
solve(a,b)
a <- matrix(c(3,8,4,-2),2,2)
a
solve(a,b)
a <- matrix(c(3,4,8,-2),2,2)
a <- matrix(c(3,4,8,-2)2,2)
traceback()
